"""
Django settings for guenthner_xyz project.

Generated by 'django-admin startproject' using Django 4.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import json
import os
from pathlib import Path

print("Hello, World!")

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

try:
    with(open("secret_key.txt")) as f:
        SECRET_KEY = f.read().strip()
except FileNotFoundError:
    with open("/home/www-data/django/secret_key.txt") as f:
        SECRET_KEY = f.read().strip()

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ["DEBUG"] == "true" if "DEBUG" in os.environ else False

if not DEBUG:
    LOGGING = {
        "version": 1,
        "disable_existing_loggers": False,
        "formatters": {
            "default": {
                "format": "{asctime} [{levelname:>5}] {name:>5}-{module:<10}: {message}",
                "style": "{",
                "datefmt": "%W %a %I:%M",
            }
        },
        "handlers": {
            "file": {
                "level": "INFO",
                "class": "logging.FileHandler",
                "filename": "/var/log/django/guenthner_xyz.log",
                "formatter": "default"
            },
        },
        "loggers": {
            "root": {
                "handlers": ["file"],
                "level": "DEBUG",
                "propagate": False,
            },
            "django": {
                "handlers": ["file"],
                "level": "DEBUG",
                "propagate": False,
            },
            "my": {
                "handlers": ["file"],
                "level": "DEBUG",
                "propagate": False,
            }
        }
    }

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sites",
    "django.contrib.sitemaps",
    "django.contrib.humanize",
    "dev.apps.DevConfig",
    "root.apps.RootConfig",
    "private.apps.PrivateConfig",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

if DEBUG:
    MIDDLEWARE.append("dev.middleware.DebugMiddleware")

ROOT_URLCONF = "guenthner_xyz.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
            "libraries": {
                "utils": "template_tags"
            }
        },
    },
]

WSGI_APPLICATION = "guenthner_xyz.wsgi.application"

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

if not DEBUG:
    myenv = json.loads(str(Path("env.json").read_text()))
else:
    myenv = {}

if DEBUG:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / "db.sqlite3",
        }
    }
else:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.mysql",
            "NAME": "guenthner_xyz",
            "USER": "guenthner_xyz",
            "PASSWORD": myenv["DB Password"],
            "HOST": "localhost",
            "PORT": "",
        }
    }

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "django/"
if not DEBUG:
    STATIC_ROOT = "/var/www/guenthner.xyz/django"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

SECURE_SSL_REDIRECT = not DEBUG
USE_X_FORWARDED_HOST = True
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True
ALLOWED_HOSTS = [
    prefix + postfix
    for prefix in
    ["guenthner.xyz", "*.guenthner.xyz", "87.106.77.210", "127.0.0.1", "localhost"]
    for postfix in
    ["", ":8000"]]

CSRF_TRUSTED_ORIGINS = [f"https://{host}" for host in
                        ["guenthner.xyz", "www.guenthner.xyz", "private.guenthner.xyz", "localhost", "127.0.0.1",
                         "87.106.77.210"]]

LOGIN_URL = "/login"
LOGOUT_URL = "/logout"
LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "/"
PASSWORD_CHANGE_DONE_URL = "/change-password/done"
SITE_ID = 2
